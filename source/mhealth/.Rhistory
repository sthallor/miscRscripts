test$predicted <- NA
test$predicted[complete.cases(test[regVar])] <- predict(rf,test[complete.cases(test[regVar]),regVar])
# test$predicted <- factor(test$predicted)
# # levels(test$predicted) <- c('coolfp','warmfp','hotfp','very_hotfp')
# levels(test$predicted) <- c('coolfp','hotfp')
# tbl <- table(test$futureIgbt,test$predicted)
# print(cbind(as.matrix(tbl),accuracy=round(rowSums(tbl*diag(nrow(tbl)))/rowSums(tbl),digits=3)))
# cat('The overall test data accuracy for predicting the temperature state is ',round(sum(tbl*diag(nrow(tbl))/sum(tbl)),digits=3),'\n\n')
plot(rf$y,rf$predicted,pch='.',col='blue',xlim=c(30,150),ylim=c(30,150))
points(test$futureIgbtMax,test$predicted,pch='.',col='red')
legend('bottomright',c('train','test'),fill=c('blue','red'))
plot(rf$y,rf$predicted,pch='.',col='blue',xlim=c(30,150),ylim=c(30,150),
xlab='futureIgbtMax',ylab='predicted',main=sprintf('Future %d to %d IGBT Max',
rowFutureOffset,(rowFutureOffset+rowFutureSpan)))
points(test$futureIgbtMax,test$predicted,pch='.',col='red')
legend('bottomright',c('train','test'),fill=c('blue','red'))
plot(rf$y,rf$predicted,pch='.',col='blue',xlim=c(30,150),ylim=c(30,150),
xlab='futureIgbtMax',ylab='predicted',main=sprintf('%d to %d obs future IGBT Max',
rowFutureOffset,(rowFutureOffset+rowFutureSpan)))
plot(rf$y,(rf$y-rf$predicted),pch='.',col='blue',xlim=c(30,150),ylim=c(-120,120),
xlab='futureIgbtMax',ylab='actual-predicted',main=sprintf('%d to %d obs future IGBT Max Residuals',
rowFutureOffset,(rowFutureOffset+rowFutureSpan)))
points(test$futureIgbtMax,(test$futureIbgtMax-test$predicted),pch='.',col='red')
legend('bottomright',c('train','test'),fill=c('blue','red'))
points(test$futureIgbtMax,(test$futureIbgtMax-test$predicted),pch='.',col='red')
length(test$futureIgbtMax)
length(test$predicted)
points(test$futureIgbtMax,(test$futureIgbtMax-test$predicted),pch='.',col='red')
plot(test$futureIgbtMax,(test$futureIgbtMax-test$predicted),pch='.',col='red',xlim=c(30,150),ylim=c(-120,120),
xlab='futureIgbtMax',ylab='actual-predicted',main=sprintf('%d to %d obs future IGBT Max Residuals',
rowFutureOffset,(rowFutureOffset+rowFutureSpan)))
points(rf$y,(rf$y-rf$predicted),pch='.',col='blue')
legend('bottomright',c('train','test'),fill=c('blue','red'))
source('C:/Users/Fred.Seymour/Rcode/master/mhealth/igbt_overheat2.R')
votes <- predict(rf,test[complete.cases(test[regVar]),regVar],type="vote")
votes <- predict(rf,test[complete.cases(test[regVar]),regVar],predict.all=TRUE)
dim(votes)
class(votes)
names(votes)
length(votes$aggregate)
dim(votes$individual)
hist(votes$individual[1,])
mean(votes$individual[1,])
votes$aggregate[1]
median(votes$individual[1,])
sum(votes$individual[1,]>=100)
sum(votes$individual[1,]>=100)/250
names(votes)
temp <- apply(votes$individual,MARGIN=1,function(x) {sum(x>=100)/length(x)})
length(temp)
hist(temp)
source('C:/Users/Fred.Seymour/Rcode/master/mhealth/igbt_overheat2.R')
plot(test$futureIgbtMax[test$igbt_temp>=100],test$rfGT100[test$igbt_temp>=100],
pch='.',col='red',xlim=c(30,150),ylim=c(0,1),
xlab='futureIgbtMax',ylab='predicted prob GT 100',main=sprintf('%d to %d obs future IGBT Max',
rowFutureOffset,(rowFutureOffset+rowFutureSpan)))
points(test$futureIgbtMax[test$igbt_temp<100],test$rfGT100[test$igbt_temp<100],pch='.',col='blue')
plot(test$futureIgbtMax[test$igbt_temp>=100],test$rfGT100[test$igbt_temp>=100],
pch='.',col='red',xlim=c(30,150),ylim=c(0,1),
xlab='futureIgbtMax',ylab='predicted prob GT 100',main=sprintf('%d to %d obs future IGBT Max',
rowFutureOffset,(rowFutureOffset+rowFutureSpan)))
plot(test$futureIgbtMax[test$igbt_temp<50],test$rfGT100[test$igbt_temp<50],
pch='.',col='blue',xlim=c(30,150),ylim=c(0,1),
xlab='futureIgbtMax',ylab='predicted prob GT 100',main=sprintf('%d to %d obs future IGBT Max',
rowFutureOffset,(rowFutureOffset+rowFutureSpan)))
points(test$futureIgbtMax[test$igbt_temp>=50 & test$igbt_temp<80],test$rfGT100[test$igbt_temp>=50 & test$igbt_temp<80],pch='.',col='green')
points(test$futureIgbtMax[test$igbt_temp>=80 & test$igbt_temp<100],test$rfGT100[test$igbt_temp>=80 & test$igbt_temp<100],pch='.',col='yellow2')
points(test$futureIgbtMax[test$igbt_temp>=100],test$rfGT100[test$igbt_temp>=100],pch='.',col='red')
legend('bottomright',c('ptemp > 100','ptemp 80 to 100','ptemp 50 to 80','ptemp < 50'),fill=c('red','yellow2','green','blue'))
legend('bottomright',c('ptemp > 100','ptemp 80 to 100','ptemp 50 to 80','ptemp < 50'),fill=c('red','yellow2','green','blue'),cex=0.6)
seq(0,1,.2)
seq(0,1,.02)
seq(0,1,.01)
table(test$rfGT100>0.5)
table(test$rfGT100>0.5,test$futureIgbt)
test_select <- test$igbt_temp < 100
table(test$rfGT100[test_select]>0.5,test$futureIgbt[test_select])
diag(2)*table(test$rfGT100[test_select]>0.5,test$futureIgbt[test_select])
sum(diag(2)*table(test$rfGT100[test_select]>0.5,test$futureIgbt[test_select]))
sum(diag(2)*table(test$rfGT100[test_select]>0.5,test$futureIgbt[test_select]))/sum(table(test$rfGT100[test_select]>0.5,test$futureIgbt[test_select]))
table(test$rfGT100[test_select]>0.5,test$futureIgbt[test_select])
table(test$rfGT100[test_select]>0.5,test$futureIgbt[test_select])[2,]
table(test$rfGT100[test_select]>0.5,test$futureIgbt[test_select])[2,2]
table(test$rfGT100[test_select]>0.5,test$futureIgbt[test_select])[2,2]/sum(table(test$rfGT100[test_select]>0.5,test$futureIgbt[test_select])[2,])
test_select <- test$igbt_temp < 100
rfcut <- data.frame(cutoff=seq(0,1,.1))
rfcut
rfcut$hotfprop <- apply(rfcut$cutoff,MARGIN=1,function(x) {
table(test$rfGT100[test_select]>x,test$futureIgbt[test_select])[2,2]/
sum(table(test$rfGT100[test_select]>0.5,test$futureIgbt[test_select])[2,]) })
rfcut$hotfprop <- apply(as.matrix(rfcut$cutoff,ncol=1),MARGIN=1,function(x) {
table(test$rfGT100[test_select]>x,test$futureIgbt[test_select])[2,2]/
sum(table(test$rfGT100[test_select]>0.5,test$futureIgbt[test_select])[2,]) })
rfcut$hotfprop <- apply(as.matrix(rfcut$cutoff,ncol=1),MARGIN=1,function(x) {
table(test$rfGT100[test_select]>x)[2,2] })
rfcut$hotfprop <- apply(as.matrix(rfcut$cutoff,ncol=1),MARGIN=1,function(x) {
sum(table(test$rfGT100[test_select]>x)) })
rfcut
rfcut$hotfprop <- apply(as.matrix(rfcut$cutoff,ncol=1),MARGIN=1,function(x) {
sum(table(test$rfGT100[test_select]>x,test$futureIgbt[test_select])) })
rfcut
rfcut$hotfprop <- apply(as.matrix(rfcut$cutoff,ncol=1),MARGIN=1,function(x) {
sum(table(test$rfGT100[test_select]>x,test$futureIgbt[test_select])[2,2]) })
rfcut$hotfprop <- apply(as.matrix(rfcut$cutoff,ncol=1),MARGIN=1,function(x) {
sum(table(test$rfGT100[test_select]>x,test$futureIgbt[test_select])) })
rfcut$hotfprop <- apply(as.matrix(rfcut$cutoff,ncol=1),MARGIN=1,function(x) {
nrow(table(test$rfGT100[test_select]>x,test$futureIgbt[test_select])) })
rfcut
rfcut$hotfprop <- apply(as.matrix(rfcut$cutoff,ncol=1),MARGIN=1,function(x) {
ncol(table(test$rfGT100[test_select]>x,test$futureIgbt[test_select])) })
rfcut
rfcut <- data.frame(cutoff=seq(0,0.9,.1))
rfcut$hotfprop <- apply(as.matrix(rfcut$cutoff,ncol=1),MARGIN=1,function(x) {
nrow(table(test$rfGT100[test_select]>x,test$futureIgbt[test_select])) })
rfcut
rfcut$hotfprop <- apply(rfcut$cutoff,MARGIN=1,function(x) {
table(test$rfGT100[test_select]>x,test$futureIgbt[test_select])[2,2]/
sum(table(test$rfGT100[test_select]>0.5,test$futureIgbt[test_select])[2,]) })
rfcut$hotfprop <- apply(rfcut$cutoff,MARGIN=1,function(x) {
table(test$rfGT100[test_select]>x,test$futureIgbt[test_select]) })
rfcut$hotfprop <- apply(rfcut$cutoff,MARGIN=1,function(x) {
table(test$rfGT100[test_select]>x,test$futureIgbt[test_select])[2,2] })
rfcut$hotfprop <- apply(as.matrix(rfcut$cutoff,ncol=1),MARGIN=1,function(x) {
nrow(table(test$rfGT100[test_select]>x,test$futureIgbt[test_select])) })
rfcut$hotfprop <- apply(as.matrix(rfcut$cutoff,ncol=1),MARGIN=1,function(x) {
table(test$rfGT100[test_select]>x,test$futureIgbt[test_select])[2,2] })
rfcut
rfcut$hotfprop <- apply(as.matrix(rfcut$cutoff,ncol=1),MARGIN=1,function(x) {
sum(table(test$rfGT100[test_select]>0.5,test$futureIgbt[test_select])[2,]) })
rfcut$hotfprop <- apply(rfcut$cutoff,MARGIN=1,function(x) {
table(test$rfGT100[test_select]>x,test$futureIgbt[test_select])[2,2]/
sum(table(test$rfGT100[test_select]>0.5,test$futureIgbt[test_select])[2,]) })
rfcut$hotfprop <- apply(rfcut$cutoff,MARGIN=1,function(x) {
table(test$rfGT100[test_select]>x,test$futureIgbt[test_select])[2,2]/
sum(table(test$rfGT100[test_select]>x,test$futureIgbt[test_select])[2,]) })
rfcut$hotfprop <- apply(rfcut$cutoff,MARGIN=1,function(x) {
table(test$rfGT100[test_select]>x,test$futureIgbt[test_select])[2,2]/
(table(test$rfGT100[test_select]>x,test$futureIgbt[test_select])[2,1]) })
rfcut$hotfprop <- apply(rfcut$cutoff,MARGIN=1,function(x) {
table(test$rfGT100[test_select]>x,test$futureIgbt[test_select])[2,2]/
(table(test$rfGT100[test_select]>x,test$futureIgbt[test_select])[2,2]) })
rfcut$hotfprop <- apply(rfcut$cutoff,MARGIN=1,function(x) {
table(test$rfGT100[test_select]>x,test$futureIgbt[test_select])[2,2] })
rfcut$hotfprop <- apply(as.matrix(rfcut$cutoff,ncol=1),MARGIN=1,function(x) {
+     table(test$rfGT100[test_select]>x,test$futureIgbt[test_select])[2,2] })
rfcut$hotfprop <- apply(as.matrix(rfcut$cutoff,ncol=1),MARGIN=1,function(x) {
table(test$rfGT100[test_select]>x,test$futureIgbt[test_select])[2,2]/
(table(test$rfGT100[test_select]>x,test$futureIgbt[test_select])[2,1]) })
rfcut
rfcut$hotfprop <- apply(as.matrix(rfcut$cutoff,ncol=1),MARGIN=1,function(x) {
table(test$rfGT100[test_select]>x,test$futureIgbt[test_select])[2,2]/
sum(table(test$rfGT100[test_select]>x,test$futureIgbt[test_select])[2,]) })
rfcut
source('C:/Users/Fred.Seymour/Rcode/master/mhealth/igbt_overheat2.R')
rfcut
test_select <- test$igbt_temp < 100
rfcut <- data.frame(cutoff=seq(0,0.99,.01))
rfcut$hotfprop <- apply(as.matrix(rfcut$cutoff,ncol=1),MARGIN=1,function(x) {
table(test$rfGT100[test_select]>x,test$futureIgbt[test_select])[2,2]/
sum(table(test$rfGT100[test_select]>x,test$futureIgbt[test_select])[2,]) })
rfcut$coldfprop <- apply(as.matrix(rfcut$cutoff,ncol=1),MARGIN=1,function(x) {
table(test$rfGT100[test_select]>x,test$futureIgbt[test_select])[1,1]/
sum(table(test$rfGT100[test_select]>x,test$futureIgbt[test_select])[1,]) })
rfcut
table(test$rfGT100[test_select]>0.95)
table(test$rfGT100[test_select]>0.95,test$futureIgbt[test_select])
test_select <- test$igbt_temp < 100
rfcut <- data.frame(cutoff=seq(0,0.99,.01))
rfcut$hotfprop <- apply(as.matrix(rfcut$cutoff,ncol=1),MARGIN=1,function(x) {
table(test$futureIgbt[test_select],test$rfGT100[test_select]>x)[2,2]/
sum(table(test$futureIgbt[test_select],test$rfGT100[test_select]>x)[2,]) })
rfcut$coldfprop <- apply(as.matrix(rfcut$cutoff,ncol=1),MARGIN=1,function(x) {
table(test$futureIgbt[test_select],test$rfGT100[test_select]>x)[1,1]/
sum(table(test$futureIgbt[test_select],test$rfGT100[test_select]>x)[1,]) })
rfcut
table(test$futureIgbt[test_select],test$rfGT100[test_select]>0.95)
table(test$futureIgbt[test_select],test$rfGT100[test_select]>0.5)
source('C:/Users/Fred.Seymour/Rcode/master/mhealth/igbt_overheat2.R')
rfcut$f_score <- 2*(rfcut$posPredValue*rfcut$sensitivity)/(rfcut$posPredValue+rfcut$sensitivity)
rfcut
rfcut
print(rfcut[rfcut$f_score==max(rfcut$f_score)])
print(rfcut[rfcut$f_score==max(rfcut$f_score),])
source('C:/Users/Fred.Seymour/Rcode/master/mhealth/igbt_overheat2.R')
source('C:/Users/Fred.Seymour/Rcode/master/mhealth/igbt_overheat2.R')
source('C:/Users/Fred.Seymour/Rcode/master/mhealth/igbt_overheat2.R')
source('C:/Users/Fred.Seymour/Rcode/master/mhealth/igbt_overheat2.R')
names(rf)
rf$mtry
source('C:/Users/Fred.Seymour/Rcode/master/mhealth/igbt_overheat2.R')
rf$mtry
source('C:/Users/Fred.Seymour/Rcode/master/mhealth/igbt_overheat2.R')
source('C:/Users/Fred.Seymour/Rcode/master/mhealth/igbt_overheat2.R')
source('C:/Users/Fred.Seymour/Rcode/master/mhealth/igbt_overheat2.R')
source('C:/Users/Fred.Seymour/Rcode/master/mhealth/igbt_overheat2.R')
source('C:/Users/Fred.Seymour/Rcode/master/mhealth/igbt_overheat2.R')
source('C:/Users/Fred.Seymour/Rcode/master/mhealth/igbt_overheat2.R')
source('C:/Users/Fred.Seymour/Rcode/master/mhealth/igbt_overheat2.R')
source('C:/Users/Fred.Seymour/Rcode/master/mhealth/igbt_overheat2.R')
table(test$futureIgbt[test_select],test$rfGT100[test_select]>0.1)[2,2]
table(test$futureIgbt[test_select],test$rfGT100[test_select]>0.9)[2,2]
table(test$futureIgbt[test_select],test$rfGT100[test_select]>0.99)[2,2]
table(test$futureIgbt[test_select],test$rfGT100[test_select]>0.99)
table(test$futureIgbt[test_select],test$rfGT100[test_select]>0.9)
rfcut$falsePositive <- apply(as.matrix(rfcut$cutoff,ncol=1),MARGIN=1,function(x) {
if (sum(test$rfGT100[test_select]>x)>0) table(test$futureIgbt[test_select],test$rfGT100[test_select]>x)[1,2] else 1})
rfcut$truePositive <- apply(as.matrix(rfcut$cutoff,ncol=1),MARGIN=1,function(x) {
if (sum(test$rfGT100[test_select]>x)>0) table(test$futureIgbt[test_select],test$rfGT100[test_select]>x)[2,2] else 0})
rfcut$sensitivity <- rfcut$truePositive/(rfcut$truePositive+rfcut$falseNegative)
rfcut$specificity <- rfcut$trueNegative/(rfcut$trueNegative+rfcut$falsePositive)
rfcut$posPredValue <- rfcut$truePositive/(rfcut$truePositive+rfcut$falsePositive)
rfcut$negPredValue <- rfcut$trueNegative/(rfcut$trueNegative+rfcut$falseNegative)
rfcut$f_score <- 2*(rfcut$posPredValue*rfcut$sensitivity)/(rfcut$posPredValue+rfcut$sensitivity)
cat('\nOptimum f_score rf tree threshold cutoff for 100C\n')
print(rfcut[rfcut$f_score==max(rfcut$f_score),])
test_select <- test$igbt_temp < 100
sum(test_select)
rfcut <- data.frame(cutoff=seq(0,0.99,.01))
rfcut
rfcut$trueNegative <- apply(as.matrix(rfcut$cutoff,ncol=1),MARGIN=1,function(x) {
table(test$futureIgbt[test_select],test$rfGT100[test_select]>x)[1,1]})
rfcut$falseNegative <- apply(as.matrix(rfcut$cutoff,ncol=1),MARGIN=1,function(x) {
table(test$futureIgbt[test_select],test$rfGT100[test_select]>x)[2,1]})
rfcut$falsePositive <- apply(as.matrix(rfcut$cutoff,ncol=1),MARGIN=1,function(x) {
if (sum(test$rfGT100[test_select]>x)>0) table(test$futureIgbt[test_select],test$rfGT100[test_select]>x)[1,2] else 1})
rfcut$truePositive <- apply(as.matrix(rfcut$cutoff,ncol=1),MARGIN=1,function(x) {
if (sum(test$rfGT100[test_select]>x)>0) table(test$futureIgbt[test_select],test$rfGT100[test_select]>x)[2,2] else 0})
rfcut
rfcut$sensitivity <- rfcut$truePositive/(rfcut$truePositive+rfcut$falseNegative)
rfcut$specificity <- rfcut$trueNegative/(rfcut$trueNegative+rfcut$falsePositive)
rfcut$posPredValue <- rfcut$truePositive/(rfcut$truePositive+rfcut$falsePositive)
rfcut$negPredValue <- rfcut$trueNegative/(rfcut$trueNegative+rfcut$falseNegative)
rfcut$f_score <- 2*(rfcut$posPredValue*rfcut$sensitivity)/(rfcut$posPredValue+rfcut$sensitivity)
cat('\nOptimum f_score rf tree threshold cutoff for 100C\n')
print(rfcut[rfcut$f_score==max(rfcut$f_score),])
rfcut
rfcut$f_score <- 2*(rfcut$posPredValue*rfcut$sensitivity)/(rfcut$posPredValue+rfcut$sensitivity)
rfcut$f_score[is.na(rfcut$f_score)] <- 0
cat('\nOptimum f_score rf tree threshold cutoff for 100C\n')
print(rfcut[rfcut$f_score==max(rfcut$f_score),])
test_select <- test$igbt_temp < 100
rfcut <- data.frame(cutoff=seq(0,1.00,.01))
rfcut$trueNegative <- apply(as.matrix(rfcut$cutoff,ncol=1),MARGIN=1,function(x) {
table(test$futureIgbt[test_select],test$rfGT100[test_select]>x)[1,1]})
rfcut$falseNegative <- apply(as.matrix(rfcut$cutoff,ncol=1),MARGIN=1,function(x) {
table(test$futureIgbt[test_select],test$rfGT100[test_select]>x)[2,1]})
rfcut$falsePositive <- apply(as.matrix(rfcut$cutoff,ncol=1),MARGIN=1,function(x) {
if (sum(test$rfGT100[test_select]>x)>0) table(test$futureIgbt[test_select],test$rfGT100[test_select]>x)[1,2] else 1})
rfcut$truePositive <- apply(as.matrix(rfcut$cutoff,ncol=1),MARGIN=1,function(x) {
if (sum(test$rfGT100[test_select]>x)>0) table(test$futureIgbt[test_select],test$rfGT100[test_select]>x)[2,2] else 0})
rfcut$sensitivity <- rfcut$truePositive/(rfcut$truePositive+rfcut$falseNegative)
rfcut$specificity <- rfcut$trueNegative/(rfcut$trueNegative+rfcut$falsePositive)
rfcut$posPredValue <- rfcut$truePositive/(rfcut$truePositive+rfcut$falsePositive)
rfcut$negPredValue <- rfcut$trueNegative/(rfcut$trueNegative+rfcut$falseNegative)
rfcut$f_score <- 2*(rfcut$posPredValue*rfcut$sensitivity)/(rfcut$posPredValue+rfcut$sensitivity)
rfcut$f_score[is.na(rfcut$f_score)] <- 0
cat('\nOptimum f_score rf tree threshold cutoff for 100C\n')
print(rfcut[rfcut$f_score==max(rfcut$f_score),])
source('C:/Users/Fred.Seymour/Rcode/master/mhealth/igbt_overheat2.R')
source('C:/Users/Fred.Seymour/Rcode/master/mhealth/igbt_overheat2.R')
rfcut$falsePositive <- apply(as.matrix(rfcut$cutoff,ncol=1),MARGIN=1,function(x) {
if (sum(test$rfGT100[test_select]>x)>0) table(test$futureIgbt[test_select],test$rfGT100[test_select]>x)[1,2] else 1})
sum(test$rfGT100[test_select]>x)
sum(test$rfGT100[test_select]>0.9)
sum(is.na(test$rfGT100[test_select]))
sum(!is.na(test$rfGT100[test_select]))
length(test_select)
test_select <- test$igbt_temp < 100 & complete.cases(test[regVar])
length(test_select)
sum(is.na(test$rfGT100[test_select]))
rfcut$falsePositive <- apply(as.matrix(rfcut$cutoff,ncol=1),MARGIN=1,function(x) {
if (sum(test$rfGT100[test_select]>x)>0) table(test$futureIgbt[test_select],test$rfGT100[test_select]>x)[1,2] else 1})
source('C:/Users/Fred.Seymour/Rcode/master/mhealth/igbt_overheat2.R')
source('C:/Users/Fred.Seymour/Rcode/master/mhealth/igbt_overheat2.R')
source('C:/Users/Fred.Seymour/Rcode/master/mhealth/igbt_overheat2.R')
source('C:/Users/Fred.Seymour/Rcode/master/mhealth/igbt_overheat2.R')
source('C:/Users/Fred.Seymour/Rcode/master/mhealth/igbt_overheat2.R')
runmeanCount
source('C:/Users/Fred.Seymour/Rcode/master/mhealth/igbt_overheat2.R')
source('C:/Users/Fred.Seymour/Rcode/master/mhealth/igbt_overheat2.R')
runmax(1:10,k=5,align='left')
runmax(1:10,k=5,align='right')
runmin(1:10,k=5,align='right')
source('C:/Users/Fred.Seymour/Rcode/master/mhealth/igbt_overheat2.R')
cat('\nRandom Forest Predictor Importance List\n')
t <- as.data.frame(rf$importance[order(rf$importance,decreasing=T)])
names(t) <- colnames(rf$importance)
rownames(t) <- rownames(rf$importance)[order(rf$importance,decreasing=T)]
t$prop <- t$IncNodePurity/sum(t$IncNodePurity)
t$cumProp <- cumsum(t$IncNodePurity)/sum(t$IncNodePurity)
print(t)
source('C:/Users/Fred.Seymour/Rcode/master/mhealth/assemble.R')
source('C:/Users/Fred.Seymour/Rcode/master/mhealth/assemble.R')
source('C:/Users/Fred.Seymour/Rcode/master/mhealth/assemble.R')
hist(dt.all$rig.156.ensign_ac_rig.abb_dw.igbt_temp)
source('C:/Users/Fred.Seymour/Rcode/master/mhealth/assemble.R')
source('C:/Users/Fred.Seymour/Rcode/master/mhealth/assemble.R')
source('C:/Users/Fred.Seymour/Rcode/master/mhealth/assemble.R')
source('C:/Users/Fred.Seymour/Rcode/master/mhealth/assemble.R')
source('C:/Users/Fred.Seymour/Rcode/master/mhealth/assemble.R')
663/102124
876/222202
988/112484
source('C:/Users/Fred.Seymour/Rcode/master/mhealth/assemble.R')
1745/190723
source('C:/Users/Fred.Seymour/Rcode/master/mhealth/assemble.R')
source('C:/Users/Fred.Seymour/Rcode/master/mhealth/assemble.R')
1699/257168
source('C:/Users/Fred.Seymour/Rcode/master/mhealth/assemble.R')
4076/241713
source('C:/Users/Fred.Seymour/Rcode/master/mhealth/assemble.R')
667/207984
source('C:/Users/Fred.Seymour/Rcode/master/mhealth/assemble.R')
1296/218696
names(dt)
head(dt$t_stamp)
temp <- as.POSIX(as.character(dt$t_stamp),"%d-%m-%Y %H:%M:%S")
temp <- as.POSIXlt(as.character(dt$t_stamp),"%d-%m-%Y %H:%M:%S")
temp <- as.POSIXlt(as.character(dt$t_stamp),"%d-%B-%Y %H:%M:%S")
warnings()
head(as.character(dt$t_stamp))
as.POSIXlt(as.character(dt$t_stamp[1]))
as.POSIXlt(as.character(dt$t_stamp[1]),"%d-%B-%Y %H:%M:%S")
as.POSIXlt(as.character(dt$t_stamp[1]),"%d-%B-%Y %H:%M:%S",tz="")
source('C:/Users/Fred.Seymour/Rcode/master/mhealth/assemble.R')
head(dt.all$t_stamp)
as.POSIXlt(as.character(dt$t_stamp[1]),"%d-%B-%Y %H:%M:%S",tz="")
temp <- as.POSIXlt(as.character(dt$t_stamp[1]),"%d-%B-%Y %H:%M:%S",tz="")
temp <- as.POSIXlt(as.character(dt$t_stamp[1:10]),"%d-%B-%Y %H:%M:%S",tz="")
temp
temp <- as.POSIXlt(as.character(dt$t_stamp),"%d-%B-%Y %H:%M:%S",tz="")
temp <- as.POSIXlt(as.character(dt.all$t_stamp),"%d-%B-%Y %H:%M:%S",tz="")
source('C:/Users/Fred.Seymour/Rcode/master/mhealth/assemble.R')
source('C:/Users/Fred.Seymour/Rcode/master/mhealth/assemble.R')
source('C:/Users/Fred.Seymour/Rcode/master/mhealth/assemble.R')
source('C:/Users/Fred.Seymour/Rcode/master/mhealth/assemble.R')
source('C:/Users/Fred.Seymour/Rcode/master/mhealth/assemble.R')
source('C:/Users/Fred.Seymour/Rcode/master/mhealth/assemble.R')
source('C:/Users/Fred.Seymour/Rcode/master/mhealth/assemble.R')
source('C:/Users/Fred.Seymour/Rcode/master/mhealth/assemble.R')
source('C:/Users/Fred.Seymour/Rcode/master/mhealth/assemble.R')
source('C:/Users/Fred.Seymour/Rcode/master/mhealth/assemble.R')
1458/248055
source('C:/Users/Fred.Seymour/Rcode/master/mhealth/assemble.R')
933/235976
source('C:/Users/Fred.Seymour/Rcode/master/mhealth/assemble.R')
1766/240615
source('C:/Users/Fred.Seymour/Rcode/master/mhealth/assemble.R')
source('C:/Users/Fred.Seymour/Rcode/master/mhealth/assemble.R')
source('C:/Users/Fred.Seymour/Rcode/master/mhealth/assemble.R')
names(dt.all)
sum(dt.all$igbt_temp>100)
sum(dt.all$igbt_temp>100,na.rm=T)
source('C:/Users/Fred.Seymour/Rcode/master/mhealth/igbt_overheat2.R')
source('~/.active-rstudio-document')
sql_query
source('C:/Users/Fred.Seymour/Rcode/master/classify/ODBCLoadTest.R')
de
source('C:/Users/Fred.Seymour/Rcode/master/classify/ODBCLoadTest.R')
de
source('C:/Users/Fred.Seymour/Rcode/master/classify/ODBCLoadTest.R')
de
source('C:/Users/Fred.Seymour/Rcode/master/classify/ODBCLoadTest.R')
de
source('C:/Users/Fred.Seymour/Rcode/master/classify/ODBCLoadTest.R')
de
source('C:/Users/Fred.Seymour/Rcode/master/classify/ODBCLoadTest.R')
de
Sys.time()
source('C:/Users/Fred.Seymour/Rcode/master/classify/ODBCLoadTest.R')
de
head(de)
source('C:/Users/Fred.Seymour/Rcode/master/classify/ODBCLoadTest.R')
head(de)
tail(de)
de1 <= de
de1 <- de
source('C:/Users/Fred.Seymour/Rcode/master/classify/ODBCLoadTest.R')
de
source('C:/Users/Fred.Seymour/Rcode/master/classify/ODBCLoadTest.R')
source('C:/Users/Fred.Seymour/Rcode/master/classify/ODBCLoadTest.R')
head(de)
source('C:/Users/Fred.Seymour/Rcode/master/classify/ODBCLoadTest.R')
de
source('C:/Users/Fred.Seymour/Rcode/master/classify/ODBCLoadTest.R')
de
source('C:/Users/Fred.Seymour/Rcode/master/classify/ODBCLoadTest.R')
de
source('C:/Users/Fred.Seymour/Rcode/master/classify/ODBCLoadTest.R')
de
names(de)
?grepl
de$display_name
de$display_name[grepl('igbt',de$display_name)]
de$display_name[grepl('BLOCK',de$display_name)]
de$[grepl('BLOCK',de$display_name),]
de[grepl('BLOCK',de$display_name),]
de[grepl('BLOCK',toupper(de$display_name)),]
de[grepl('block',toupper(de$display_name)),]
de[grepl('block',tolower(de$display_name)),]
de[grepl('igbt',tolower(de$display_name)),]
de[grepl('temp',tolower(de$display_name)),]
de[grepl('block',tolower(de$tag_path)),]
de[grepl('igbt',tolower(de$tag_path)),]
de[grepl('dc_bus_voltage',tolower(de$tag_path)),]
de[grepl('output_voltage',tolower(de$tag_path)),]
de[grepl('current',tolower(de$tag_path)),]
de[grepl('torque',tolower(de$tag_path)),]
de[grepl('speed',tolower(de$tag_path)),]
nrow(de[grepl('speed',tolower(de$tag_path)),])
length(de$tag_path[grepl('speed',tolower(de$tag_path))])
source('C:/Users/Fred.Seymour/Rcode/master/classify/ODBCLoadTest.R')
source('C:/Users/Fred.Seymour/Rcode/master/classify/ODBCLoadTest.R')
source('C:/Users/Fred.Seymour/Rcode/master/classify/ODBCLoadTest.R')
source('~/.active-rstudio-document')
sql_query
print(sql_query)
cat(sql_query)
source('~/.active-rstudio-document')
head(tags)
tags$t_stamp1 <- as.POSIXlt(tags$t_stamp/1000,origin="1970-01-01 00:00:00")
head(tags)
tags$t_stamp1 <- as.POSIXlt(tags$t_stamp/1000,origin="1970/01/01 00:00:00")
head(tags)
names(tags)
min(tags$t_stamp1)
max(tags$t_stamp1)
source('C:/Users/Fred.Seymour/Rcode/master/mhealth/ODBCLoadTest2.R')
cat('\nfrom date=',min(tags$t_stamp),' to ',max(tags$t_stamp))
min(tags$t_stamp)
class(min(tags$t_stamp))
cat('\nfrom date=',as.character(min(tags$t_stamp)),' to ',as.character(max(tags$t_stamp)))
source('C:/Users/Fred.Seymour/Rcode/master/mhealth/ODBCLoadTest2.R')
as.POSIXlt('2017-03-01 14:45:05',"%Y-%m-%d %H:%M:%S",tz="")
as.numeric(as.POSIXlt('2017-03-01 14:45:05',"%Y-%m-%d %H:%M:%S",tz=""))
as.numeric(as.POSIXlt('2017-03-01 14:45:05',"%Y-%m-%d %H:%M:%S",tz=""))*1000
source('C:/Users/Fred.Seymour/Rcode/master/mhealth/ODBCLoadTest2.R')
head(tags)
source('C:/Users/Fred.Seymour/Rcode/master/mhealth/ODBCLoadTest2.R')
cat(sql_query)
source('C:/Users/Fred.Seymour/Rcode/master/mhealth/ODBCLoadTest2.R')
source('C:/Users/Fred.Seymour/Rcode/master/mhealth/ODBCLoadTest2.R')
outputFilename <- 'C:/Users/Fred.Seymour/Historian_Data/170302_MachineHealth/Rig140/20170301.csv'
write.csv(tags,file=outputFilename,row.names=FALSE)
cat('\nwith ',nrow(tags),' rows and ',ncol(tags),' columns')
cat('\nfrom date=',as.character(min(tags$t_stamp)),' to ',as.character(max(tags$t_stamp)))
source('C:/Users/Fred.Seymour/Rcode/master/mhealth/ODBCLoadTest2.R')
28*24*360
source('C:/Users/Fred.Seymour/Rcode/master/mhealth/ODBCLoadTest2.R')
source('C:/Users/Fred.Seymour/Rcode/master/mhealth/ODBCLoadTest2.R')
source('C:/Users/Fred.Seymour/Rcode/master/mhealth/ODBCLoadTest2.R')
source('C:/Users/Fred.Seymour/Rcode/master/mhealth/ODBCLoadTest2.R')
dim(tags)
source('C:/Users/Fred.Seymour/Rcode/master/mhealth/ODBCLoadTest2.R')
source('C:/Users/Fred.Seymour/Rcode/master/mhealth/ODBCLoadTest2.R')
source('C:/Users/Fred.Seymour/Rcode/master/mhealth/ODBCLoadTest2.R')
source('C:/Users/Fred.Seymour/Rcode/master/mhealth/ODBCLoadTest2.R')
source('C:/Users/Fred.Seymour/Rcode/master/mhealth/ODBCLoadTest2.R')
source('C:/Users/Fred.Seymour/Rcode/master/mhealth/ODBCLoadTest2.R')
source('C:/Users/Fred.Seymour/Rcode/master/mhealth/ODBCLoadTest2.R')
source('C:/Users/Fred.Seymour/Rcode/master/mhealth/ODBCLoadTest2.R')
source('C:/Users/Fred.Seymour/Rcode/master/mhealth/assemble.R')
source('C:/Users/Fred.Seymour/Rcode/master/mhealth/assemble.R')
dim(dt.all)
names(dt.all)
max(dt.all$igbt_temp)
max(dt.all$igbt_temp,na.rm=T)
hist(dt.all$igbt_temp)
head(dt.all)
dim(dt.all)
sum(!is.na(dt.all$igbt_temp))
max(dt.all$igbt_temp,na.rm=T)
mean(dt.all$igbt_temp,na.rm=T)
min(dt.all$igbt_temp,na.rm=T)
sum(dt.all$igbt_temp==0)
sum(dt.all$igbt_temp==0,na.rm=T)
source('C:/Users/Fred.Seymour/Rcode/master/source/mhealth/ODBCLoadTest2.R')
read.csv('C:/Users/Fred.Seymour/Historian_Data/170302_MachineHealth/Rig156/1703_clean.csv')
df <- read.csv('C:/Users/Fred.Seymour/Historian_Data/170302_MachineHealth/Rig156/1703_clean.csv')
31*24*360
head(df)
sum(is.na(df$speed))
sum(!is.na(df$speed))
str(df)
df %>% summarize_each(funs(is.na(.)))
library(dplyr)
install.packages("dplyr")
?apply
apply(df,2,function(x) return(sum(is.na(x)))
)
apply(df,2,function(x) return(sum(is.na(x))))
apply(df,2,function(x) return(sum(!is.na(x))))
apply(df,2,function(x) return(round(sum(!is.na(x))/length(x),digits=3)))
source('C:/Users/Fred.Seymour/Rcode/master/source/mhealth/ODBCLoadTest2.R')
source('C:/Users/Fred.Seymour/Rcode/master/source/mhealth/ODBCLoadTest2.R')
source('C:/Users/Fred.Seymour/Rcode/master/source/mhealth/ODBCLoadTest2.R')
source('C:/Users/Fred.Seymour/Rcode/master/source/mhealth/ODBCLoadTest2.R')
source('C:/Users/Fred.Seymour/Rcode/master/source/mhealth/ODBCLoadTest2.R')
source('C:/Users/Fred.Seymour/Rcode/master/source/mhealth/ODBCLoadTest2.R')
source('C:/Users/Fred.Seymour/Rcode/master/source/mhealth/ODBCLoadTest2.R')
source('C:/Users/Fred.Seymour/Rcode/master/source/mhealth/ODBCLoadTest2.R')
source('C:/Users/Fred.Seymour/Rcode/master/source/mhealth/ODBCLoadTest2.R')
source('C:/Users/Fred.Seymour/Rcode/master/source/mhealth/ODBCLoadTest2.R')
source('C:/Users/Fred.Seymour/Rcode/master/source/mhealth/ODBCLoadTest2.R')
source('C:/Users/Fred.Seymour/Rcode/master/source/mhealth/ODBCLoadTest2.R')
source('C:/Users/Fred.Seymour/Rcode/master/source/mhealth/ODBCLoadTest2.R')
source('C:/Users/Fred.Seymour/Rcode/master/source/mhealth/ODBCLoadTest2.R')
source('C:/Users/Fred.Seymour/Rcode/master/source/mhealth/ODBCLoadTest2.R')
source('C:/Users/Fred.Seymour/Rcode/master/source/mhealth/ODBCLoadTest2.R')
source('C:/Users/Fred.Seymour/Rcode/master/source/mhealth/assemble.R')
names(dt)
source('C:/Users/Fred.Seymour/Rcode/master/source/mhealth/assemble.R')
